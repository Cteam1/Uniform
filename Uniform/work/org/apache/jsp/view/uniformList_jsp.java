/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-06-29 06:22:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import bean.Uniform;
import util.*;

public final class uniformList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/common/header.jsp", Long.valueOf(1688016919809L));
    _jspx_dependants.put("/common/footer.jsp", Long.valueOf(1687935654000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Uniform");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	MyFormat obj = new MyFormat();
	ArrayList<Uniform> uniform_list = (ArrayList<Uniform>) request.getAttribute("uniform_list");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>商品一覧</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<div style=\"margin-top: 30px;  text-align:center\">\r\n");
      out.write("\t<img src=\"");
      out.print( request.getContextPath() );
      out.write("/pic/UniformLogo.png\" alt=\"ロゴ\">\r\n");
      out.write("\t<hr style=\"text-align: center; background-color: blue; width:auto; height: 5px\">\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<table style=\"margin: auto; width: 850px; text-align: center;\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td style=\"width: 160px\">\r\n");
      out.write("\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/view/guestMenu.jsp\">【購入者メニュー】</a>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td style=\"width: 508px; font-size: 24px\">商品一覧</td>\r\n");
      out.write("\t\t\t<td style=\"width: 160px\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<hr style=\"text-align: center; background-color: blue; width:auto; height: 5px\">\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div style=\"margin: 0 auto; width: 1000\">\r\n");
      out.write("\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/insertCart\">\r\n");
      out.write("\t\t<table border=\"2\" style=\"margin: 0 auto; margin-bottom:10px\">\r\n");
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t<th>ユニフォームA</th>\r\n");
      out.write("\t\t<th>ユニフォームB</th>\r\n");
      out.write("\t\t<th>ユニフォームC</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t<td><img src=\"");
      out.print( request.getContextPath() );
      out.write("/pic/uniformA.jpg\" alt=\"A\"></td>\r\n");
      out.write("\t\t<td><img src=\"");
      out.print( request.getContextPath() );
      out.write("/pic/uniformB.jpg\" alt=\"B\"></td>\r\n");
      out.write("\t\t<td><img src=\"");
      out.print( request.getContextPath() );
      out.write("/pic/uniformC.jpg\" alt=\"C\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t\t<table border=\"1\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th style=\"background-color: #dcdcdc; width: 300\">種類</th>\r\n");
      out.write("\t\t\t\t\t<th style=\"background-color: #dcdcdc; width: 300\">価格</th>\r\n");
      out.write("\t\t\t\t\t<th style=\"background-color: #dcdcdc; width: 300\">在庫数</th>\r\n");
      out.write("\t\t\t\t\t<th style=\"background-color: #dcdcdc; width: 100\">購入数</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

					if (uniform_list != null) {
						for (int i = 0; i < uniform_list.size(); i++) {
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td style=\"text-align: center\">");
      out.print(uniform_list.get(i).getUniformType());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td style=\"text-align: center\">");
      out.print(obj.moneyFormat(uniform_list.get(i).getPrice()));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td style=\"text-align: center\">");
      out.print(uniform_list.get(i).getStock());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"quantity");
      out.print(i);
      out.write("\" value=\"0\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"uniform");
      out.print(i);
      out.write("\" value=\"");
      out.print(uniform_list.get(i).getUniformid());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t");

					}
					}
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<input type=\"submit\" value=\"カートに追加\"\r\n");
      out.write("\t\t\t\tstyle=\"margin: 30 460; width: 100\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".footer {\r\n");
      out.write("\tposition: sticky;\r\n");
      out.write("\ttop: 100vh;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<div class=\"footer\">\r\n");
      out.write("\t<hr\r\n");
      out.write("\t\tstyle=\"text-align: center; background-color: blue; width: auto; height: 5px\">\r\n");
      out.write("\t<table\r\n");
      out.write("\t\tstyle=\"margin: auto; width: 950px; text-align: left; margin-bottom: 80px;\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>copyright (c) 2023 all rights reserved.</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
